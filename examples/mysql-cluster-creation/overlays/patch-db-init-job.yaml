# Requirements:

# 1. Create a user secret - this will set up a new application database and user, with password and full grant.
# 2. Find your database-user-secret - this will have your root password defined in it.

apiVersion: batch/v1
kind: Job
metadata:
  name: db-init-job
  namespace: mysql-operator
spec:
  backoffLimit: 2
  ttlSecondsAfterFinished: 60
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mysql-init
          image: mysql:8
          env:
            - name: ROOT_PASSWORD
              valueFrom:
                secretKeyRef:

                  # The Percona Operator will automatically create a secret. You can control the name in
                  # base/database.yaml or in an overlay. Root is the root user password key in that secret.
                  # This will automatically base-64 decode that secret value for you.

                  name: mysql-database-users
                  key: root

            # test-user-secret is created from user-secret.yaml, pulling in a 1Password item as a kubernetes secret.
            # You can pretty easily shim in any other secrets from any other sources here to ensure your app database
            # and users are created and permissions granted.

            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: test-user-secret
                  key: database-name
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: test-user-secret
                  key: database-user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test-user-secret
                  key: database-password

          command: [ "sh", "-c" ]

          # Change the database host in this command (it appears more than once) to use the metadata.name from
          # database.yaml (test-db-haproxy becomes your-db-name-haproxy).

          args:
            - |
              set -euo pipefail
              echo "Waiting for MySQL to be ready..."
              for i in $(seq 1 60); do
                mysqladmin ping -h test-db-haproxy.mysql-operator.svc.cluster.local -u root -p"$ROOT_PASSWORD" --silent && break
                sleep 5
              done
              echo "MySQL is up, running custom SQL..."
              mysql -h test-db-haproxy.mysql-operator.svc.cluster.local -u root -p"$ROOT_PASSWORD" -e "CREATE DATABASE IF NOT EXISTS $DATABASE_NAME; CREATE USER IF NOT EXISTS '$DATABASE_USER'@'%' IDENTIFIED BY '$DATABASE_PASSWORD'; GRANT ALL PRIVILEGES ON $DATABASE_NAME.* TO '$DATABASE_USER'@'%';"
              echo "Custom SQL executed successfully."
